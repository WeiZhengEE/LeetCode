Python:
class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        if root == None:
            return True
        return self.symmetrical(root.left,root.right)
        
    def symmetrical(self,left,right):
        if left == None and right == None:
            return True
        if left and right and left.val == right.val:
            return self.symmetrical(left.left,right.right) and self.symmetrical(left.right,right.left)
        return False

Java:
class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root == null) return true;
        return helper(root.left, root.right);
    }
    
    public boolean helper(TreeNode left, TreeNode right){
        if(left == null && right == null) return true;
        if(left != null && right != null && left.val == right.val){
            return helper(left.left, right.right) && helper(left.right, right.left);
        }
        return false;
    }
}
