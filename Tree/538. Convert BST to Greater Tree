Python:
class Solution:
    def convertBST(self, root: TreeNode) -> TreeNode:
        self.currentsum = 0
        self.dfs(root)
        return root
    
    def dfs(self, root):
        if not root:
            return
        self.dfs(root.right)
        root.val += self.currentsum
        self.currentsum = root.val
        self.dfs(root.left)

Java:
class Solution {
    private int curSum;
    public TreeNode convertBST(TreeNode root) {
        this.curSum = 0;
        dfs(root);
        return root;
    }
    
    public void dfs(TreeNode root){
        if(root == null) return;
        dfs(root.right);
        root.val += this.curSum;
        this.curSum = root.val;
        dfs(root.left);
        return;
    }
}
