Python:
class Solution:
    def diameterOfBinaryTree(self, root: TreeNode) -> int:
        self.diameter = 0
        self.height(root)
        return self.diameter
        
    
    def height(self, root):
        if not root:
            return 0
        if root.right == None and root.left == None:
            return 1
        r = self.height(root.right)
        l = self.height(root.left)
        length = r + l
        if length > self.diameter:
            self.diameter = length
        return max(r,l) + 1

Java:
class Solution {
    private int maxLen;
    public int diameterOfBinaryTree(TreeNode root) {
        this.maxLen = 0;
        height(root);
        return this.maxLen;
        
    }
    
    public int height(TreeNode root){
        if(root == null) return 0;
        if(root.left == null && root.right == null) return 1;
        int left = height(root.left);
        int right = height(root.right);
        int length = left + right;
        if(length > this.maxLen) this.maxLen = length;
        return Math.max(left, right) + 1;
        
    }
}
