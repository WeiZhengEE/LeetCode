Python:
class Solution:
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        min_limit = -float("inf")
        max_limit = float("inf")
        return self.track(root,min_limit,max_limit)
        
    def track(self, root, min_limit, max_limit):
        if not root:
            return True
        if root.val <= min_limit or root.val >= max_limit:
            return False
        return self.track(root.left, min_limit, root.val) and self.track(root.right,root.val, max_limit)

Java:
class Solution {
    public boolean isValidBST(TreeNode root) {
        long low = Long.MIN_VALUE;
        long high = Long.MAX_VALUE;
        return check(root, low, high);
    }
    
    public boolean check(TreeNode root, long low, long high){
        if(root == null) return true;
        if(root.val <= low || root.val >= high) return false;
        return check(root.left, low, root.val) && check(root.right, root.val, high);
    }
}
