Python:
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        record = {}
        for i in nums:
            if i in record:
                record[i] += 1
            else:
                record[i] = 1
        bucket = [[] for i in range(len(nums)+1)]
        res = []
        for i in record:
            bucket[record[i]].append(i)
        for i in bucket[::-1]:
            if len(res) == k:
                return res
            if i:
                res += i

Java:
class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> record = new HashMap<>();
        for(int num:nums){
            record.put(num, record.getOrDefault(num,0)+1);
        }
        List<Integer>[] bucket = new List[nums.length + 1];
        for(int key:record.keySet()){
            int frequency = record.get(key);
            if(bucket[frequency] == null) bucket[frequency] = new ArrayList<>();
            bucket[frequency].add(key);
        }
        List<Integer> res = new ArrayList<>();
        for(int i = bucket.length-1; i >= 0 && res.size() < k; i--){
            if(bucket[i] != null) res.addAll(bucket[i]);
        }
        return res;
    }
}
