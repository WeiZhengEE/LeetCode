Python:
class Solution:
    def decodeString(self, s: str) -> str:
        stack = []
        substring = ''
        num = ''
        for i in s:
            if i.isdigit():
                num += i
            elif i == '[':
                stack.append(substring)
                stack.append(num)
                substring, num = '', ''
            elif i == ']':
                temp_num = stack.pop()
                temp_string = stack.pop()
                substring = temp_string + int(temp_num)*substring
            else:
                substring += i
        return substring

Java:
import java.util.Stack;
class Solution {
    public String decodeString(String s) {
        Stack<Integer> nums = new Stack<>();
        Stack<String> strings = new Stack<>();
        StringBuilder subString = new StringBuilder();
        StringBuilder num = new StringBuilder();
        StringBuilder res = new StringBuilder();
        for(int i = 0; i < s.length();i++){
            char temp = s.charAt(i);
            if(Character.isDigit(temp)){
                num.append(temp);
            }else if(temp == '['){
                nums.push(Integer.parseInt(num.toString()));
                strings.push(subString.toString());
                subString = new StringBuilder();
                num = new StringBuilder();
            }else if(temp == ']'){
                res = new StringBuilder(strings.pop());
                int count = nums.pop();
                for(int j = 0; j < count;j++) res.append(subString.toString());
                subString = res;          
            }else{
                subString.append(temp);
            }
        }
        return subString.toString();       
    }
}
