Python:
class Solution(object):
    def intersect(self, nums1, nums2):
        counts = {}
        res = []

        for num in nums1:
            counts[num] = counts.get(num, 0) + 1

        for num in nums2:
            if num in counts and counts[num] > 0:
                res.append(num)
                counts[num] -= 1

        return res

Java:
class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> count = new HashMap<>();
        List<Integer> nums = new ArrayList<>();
        for(int num:nums1) count.put(num, count.getOrDefault(num, 0)+1);
        for(int num:nums2){
            if(count.containsKey(num) && count.get(num) > 0){
                nums.add(num);
                count.put(num, count.get(num)-1);
            }
        }
        int[] res = new int[nums.size()];
        for(int i = 0;i<nums.size();i++){
            res[i] = nums.get(i);
        }
        return res;       
    }
}
