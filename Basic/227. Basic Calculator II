Python:
class Solution:
    def calculate(self, s: str) -> int:
        num, stack, sign = 0, [], "+"
        for i in range(len(s)):
            if s[i].isdigit():
                num = num * 10 + int(s[i])
            if s[i] in "+-*/" or i == len(s) - 1:
                if sign == "+":
                    stack.append(num)
                elif sign == "-":
                    stack.append(-num)
                elif sign == "*":
                    stack.append(stack.pop()*num)
                else:
                    stack.append(int(stack.pop()/num))
                num = 0
                sign = s[i]
        return sum(stack)
        
Java:
import java.util.Stack;
class Solution {
    public int calculate(String s) {
        int num = 0;
        Stack<Integer> stack = new Stack<>();
        char operator = '+';
        char temp;
        for(int i =0; i < s.length(); i++){
            temp = s.charAt(i);
            if(Character.isDigit(temp)){
                num = num*10 + temp -'0';
            }
            if(!Character.isDigit(temp) && temp !=' ' || i == s.length()-1){
                if(operator == '+'){
                    stack.push(num);
                }else if(operator == '-'){
                    stack.push(-num);
                }else if(operator == '*'){
                    stack.push(stack.pop()*num);
                }else{
                    stack.push(stack.pop()/num);
                }
                num = 0;
                operator = temp;
            }
        }
        for(int i:stack){
            num += i;
        }
        return num;
    }
}
