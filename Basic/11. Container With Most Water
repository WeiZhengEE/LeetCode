Python:
class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        i, j = 0, len(height) - 1
        water = 0
        while i < j:
            water = max(water, (j - i) * min(height[i], height[j]))
            if height[i] < height[j]:
                i += 1
            else:
                j -= 1
        return water

Java:
class Solution {
    public int maxArea(int[] height) {
        int l = 0;
        int r = height.length-1;
        int maxC = 0;
        int c = 0;
        while(l<r){
            c = Math.min(height[r],height[l])*(r-l);
            if(maxC < c){
                maxC = c;
            }
            if(height[l] < height[r]){
                l ++;
            }else{
                r --;
            }
        }
        return maxC;
    }
}
