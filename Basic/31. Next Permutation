Python:
class Solution:
    def nextPermutation(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        temp = -1
        for i in range(len(nums)-2,-1,-1):
            if nums[i+1] > nums[i]:
                temp = i
                break
        if temp == -1:
            nums.reverse()
            return

        for i in range(len(nums)-1,temp,-1):
            if nums[i] > nums[temp]:
                nums[i],nums[temp] = nums[temp],nums[i]          
                nums[temp+1:] = sorted(nums[temp+1:])
                return

Java:
class Solution {
    public void nextPermutation(int[] nums) {
        int temp = -1;
        for(int i = nums.length-2; i>=0; i--){
            if(nums[i]<nums[i+1]){
                temp = i;
                break;
            }
        }
        
        if(temp == -1){
            int i = 0;
            int j = nums.length-1;
            while(i<j){
                temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                i++;
                j--;
            }
            return;
        }
        
        for(int i = nums.length-1;i>=0;i--){
            if(nums[i]>nums[temp]){
                int val = nums[i];
                nums[i] = nums[temp];
                nums[temp] = val;
                Arrays.sort(nums, temp+1, nums.length);
                return;
            }
        }
    }
}
