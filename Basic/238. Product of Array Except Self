Python:
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        res = []
        n = len(nums)
        p = 1
        for i in range(n):
            res.append(p)
            p = p*nums[i]
        p = 1
        for i in range(n-1,-1,-1):
            res[i] = res[i]*p
            p = p*nums[i]
        return res

Java:
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] res = new int[nums.length];
        int p = 1;
        for(int i=0;i<nums.length;i++){
            res[i] = p;
            p *= nums[i];
        }
        p = 1;
        for(int i = nums.length-1;i >=0; i--){
            res[i] *= p;
            p *= nums[i];
        }
        return res;
    }
}
