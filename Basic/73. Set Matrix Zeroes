Python:
class Solution:
    def setZeroes(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """
        m =len(matrix)
        n = len(matrix[0])
        iset = []
        jset = []
        for i in range(m):
            for j in range(n):
                if matrix[i][j] == 0:
                    if i not in iset:
                        iset.append(i)
                    if j not in jset:
                        jset.append(j)
        for i in range(m):
            for j in range(n):
                if (i in iset) or (j in jset):
                    matrix[i][j] = 0

Java:
class Solution {
    public void setZeroes(int[][] matrix) {
        int m = matrix.length;
        int n = matrix[0].length;
        Set<Integer> iSet = new HashSet<>();
        Set<Integer> jSet = new HashSet<>();
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == 0){
                    iSet.add(i);
                    jSet.add(j);
                }
            }
        }
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(iSet.contains(i) || jSet.contains(j)) matrix[i][j] = 0;
            }
        }
    }
}
