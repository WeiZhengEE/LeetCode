Python:
class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        dp = [False] * len(s)
        for i in range(len(s)):
            for word in wordDict:
                if i-len(word)+1 >= 0 and s[i-len(word)+1:i+1] == word and (dp[i-len(word)] or i-len(word) == -1):
                    dp[i] = True
        return dp[-1]

Java:
class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length()+1];
        dp[0] = true;
        for(int i = 1; i <= s.length(); i++){
            for(String word: wordDict){
                if(i >= word.length() && dp[i - word.length()] && word.equals(s.substring(i-word.length(), i))){
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[s.length()];
    }
}
