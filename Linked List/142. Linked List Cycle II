Python:
class Solution(object):
    def detectCycle(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head:
            return
        fast = slow = head
        while fast.next and fast.next.next:
            slow = slow.next
            fast = fast.next.next
            if fast == slow:
                fast = head
                while fast:
                    if fast == slow:
                        return fast
                    slow = slow.next
                    fast = fast.next

Java:
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if(null == head) return head;
        ListNode slow = head;
        ListNode fast = head;
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
            if(slow == fast){
                fast = head;
                while(fast != null){
                    if(slow == fast) return slow;
                    fast = fast.next;
                    slow = slow.next;
                }
            }
        }
        return null;
    }
}
