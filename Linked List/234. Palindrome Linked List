Python:
class Solution:
    def isPalindrome(self, head: ListNode) -> bool:
        fast = slow = head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
        
        newhead = None
        while slow:
            temp = slow.next
            slow.next = newhead
            newhead = slow
            slow = temp
        
        while newhead:
            if newhead.val != head.val:
                return False
            newhead = newhead.next
            head = head.next
        
        return True

Java:
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode fast = head;
        ListNode slow = head;
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode newhead = null;
        ListNode temp = null;
        while(slow != null){
            temp = slow.next;
            slow.next = newhead;
            newhead = slow;
            slow = temp;
        }
        while(newhead != null){
            if(newhead.val != head.val) return false;
            head = head.next;
            newhead = newhead.next;
        }
        return true;  
    }
}
