Python:
class Solution:
    def longestSubstring(self, s: str, k: int) -> int:
        if len(s) < k:
            return 0
        rare_c = min(set(s), key = s.count)
        if s.count(rare_c) >= k:
            return len(s)
        return max(self.longestSubstring(substring,k) for substring in s.split(rare_c))

Java:
class Solution {
    public int longestSubstring(String s, int k) {
        return helper(s, k, 0, s.length());
    }
    
    public int helper(String s, int k, int start, int end){
        if(end - start < k) return 0;
        int[] count = new int[26];
        for(int i = start; i < end; i++) count[s.charAt(i)-'a']++;
        for(int i = start; i < end; i++){
            if(count[s.charAt(i)-'a'] < k) return Math.max(helper(s, k, start, i), helper(s, k, i+1, end));
        }
        return end-start;    
    }
}
