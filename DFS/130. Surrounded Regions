class Solution:
    def solve(self, board: List[List[str]]) -> None:
        for i in range(len(board)):
            for j in range(len(board[0])):
                if (i == 0 or i == len(board)-1 or j == 0 or j == len(board[0])-1) and board[i][j] == 'O':
                    self.dfs(board, i, j)
        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] != 'V':
                    board[i][j] = 'X'
                else:
                    board[i][j] = 'O'  
                    
    def dfs(self, board, i, j):
        if i < 0 or i > len(board)-1 or j < 0 or j > len(board[0])-1 or board[i][j] != 'O':
            return
        board[i][j] = 'V'
        self.dfs(board, i-1, j)
        self.dfs(board, i, j-1)
        self.dfs(board, i+1, j)
        self.dfs(board, i, j+1)
