Python:
class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        if len(p)>len(s):
            return []
        res = []
        record = {}
        for i in p:
            record[i] = record.get(i,0)+1
        window = {}
        for i in range(0,len(p)-1):
            window[s[i]] = window.get(s[i],0)+1
        for i in range(len(p)-1,len(s)):
            window[s[i]] = window.get(s[i],0)+1
            if record == window:
                res.append(i-len(p)+1)
            window[s[i-len(p)+1]] -= 1
            if window[s[i-len(p)+1]] == 0:
                del window[s[i-len(p)+1]]
        return res

Java:
class Solution {
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> res = new ArrayList<>();
        if(s.length() == 0 || p.length() == 0 || s.length() < p.length()) return res;
        int[] chars = new int[26];
        for(Character c: p.toCharArray()){
            chars[c-'a']++;
        }
        int len = p.length();
        int diff = len;
        char temp;
        for(int i = 0; i < len; i++){
            temp = s.charAt(i);
            chars[temp-'a']--;
            if(chars[temp-'a'] >= 0) diff--;
        }
        if(diff == 0) res.add(0);
        
        for(int i = len; i < s.length(); i++){
            temp = s.charAt(i-len);
            if(chars[temp-'a'] >= 0) diff++;
            chars[temp-'a']++;
            
            temp = s.charAt(i);
            chars[temp-'a']--;
            if(chars[temp-'a'] >= 0) diff--;
            
            if(diff == 0) res.add(i-len+1);            
        }
        return res;
        
    }
}
